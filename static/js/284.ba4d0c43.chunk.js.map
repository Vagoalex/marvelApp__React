{"version":3,"file":"static/js/284.ba4d0c43.chunk.js","mappings":"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","sources":["components/ErrorBoundary/ErrorBoundary.js","components/ErrorMessage/ErrorMessage.js","components/LoadingMarvel/LoadingMarvel.js","components/RandomChar/RandomChar.js","components/CharListItem/CharListItem.js","components/CharList/CharList.js","components/Skeleton/Skeleton.js","components/CharForm/CharForm.js","components/CharInfo/CharInfo.js","components/pages/characters/Characters.js","hooks/useMarvelService.js","hooks/http.hook.js"],"sourcesContent":["import { Component } from 'react';\r\nimport ErrorMessage from '../ErrorMessage/ErrorMessage';\r\n\r\nconst errorBoundaryClasses = {\r\n  margin: '0 auto',\r\n  width: '570px',\r\n  height: '100%',\r\n  padding: '25px',\r\n  border: '2px solid #000',\r\n  borderRadius: '15px',\r\n  boxShadow: '5px 5px 20px rgba(0, 0, 0, 0.8)',\r\n  background: '#232222',\r\n  zIndex: '10',\r\n  position: 'relative',\r\n};\r\n\r\nexport class ErrorBoundary extends Component {\r\n  state = {\r\n    error: false,\r\n  };\r\n\r\n  componentDidCatch(error, errorInfo) {\r\n    console.log(error, errorInfo);\r\n\r\n    this.setState({ error: true });\r\n  }\r\n\r\n  render() {\r\n    if (this.state.error) {\r\n      return (\r\n        <div style={errorBoundaryClasses}>\r\n          <ErrorMessage />\r\n        </div>\r\n      );\r\n    }\r\n\r\n    return this.props.children;\r\n  }\r\n}\r\n\r\nexport default ErrorBoundary;\r\n","const ErrorMessage = () => {\r\n  const stylesText = {\r\n    position: 'absolute',\r\n    left: '50%',\r\n    bottom: '0%',\r\n    transform: 'translate(-50%, -50%)',\r\n    textAlign: 'center',\r\n    color: '#fff',\r\n    fontWeight: 700,\r\n    textTransform: 'uppercase',\r\n    background: '#000',\r\n    width: '50%',\r\n    borderRadius: '14px',\r\n    padding: '5px 0px',\r\n  };\r\n\r\n  const stylesImg = {\r\n    margin: '0 auto',\r\n    background: 'none',\r\n    display: 'block',\r\n    objectFit: 'none',\r\n    border: '10px solid #000',\r\n    boxShadow: '15px 15px 20px rgba(0, 0, 0, 0.8)',\r\n    width: '100%',\r\n    height: '180px',\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <p style={stylesText}>\r\n        Oops!\r\n        <br />\r\n        Please, update your page :)\r\n      </p>\r\n      <img style={stylesImg} src='https://i.gifer.com/fy3e.gif' alt='error' />\r\n    </>\r\n  );\r\n};\r\nexport default ErrorMessage;\r\n","import marvel from '../../assets/gifs/Marvel.gif';\r\n\r\nimport './LoadingMarvel.scss';\r\n\r\nconst LoadingMarvel = () => {\r\n  return <img className='LoadingMarvel' src={marvel} alt='marvel loading' />;\r\n};\r\n\r\nexport default LoadingMarvel;\r\n","import { useEffect, useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { CSSTransition } from 'react-transition-group';\r\n\r\nimport LoadingMarvel from '../LoadingMarvel/LoadingMarvel';\r\nimport ErrorMessage from '../ErrorMessage/ErrorMessage';\r\nimport useMarvelService from '../../hooks/useMarvelService';\r\n\r\nimport './RandomChar.scss';\r\n\r\nimport randomizerDecorate from '../../assets/icons/RandomChar-mjolnerShild.png';\r\nimport marvelIcon from '../../assets/icons/marvelIcon.jpg';\r\n\r\nconst RandomChar = (props) => {\r\n  const [char, setChar] = useState(null);\r\n  const [loadChar, setLoadChar] = useState(false);\r\n\r\n  const { getElementById, loading, error, clearError } = useMarvelService();\r\n\r\n  useEffect(() => {\r\n    updateChar();\r\n    const timerId = setInterval(updateChar, 120000);\r\n\r\n    return () => {\r\n      clearInterval(timerId);\r\n    };\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  const onCharLoaded = (char) => {\r\n    setChar(char);\r\n    setLoadChar(true);\r\n  };\r\n\r\n  const updateChar = () => {\r\n    clearError();\r\n    const id = Math.floor(Math.random() * (1011400 - 1011000) + 1011000);\r\n    getElementById(id, 'characters').then(onCharLoaded);\r\n    setLoadChar(false);\r\n  };\r\n\r\n  const errorMessage = error ? <ErrorMessage /> : null;\r\n  const spinner = loading ? <LoadingMarvel /> : null;\r\n  const content = !(loading || error || !char) ? <View char={char} /> : null;\r\n\r\n  return (\r\n    <CSSTransition in={loadChar} timeout={500} classNames='random-char-load'>\r\n      <section className='RandomChar wrapper'>\r\n        <div className='RandomChar__character-info'>\r\n          {errorMessage}\r\n          {spinner}\r\n          {content}\r\n        </div>\r\n        <div className='RandomChar__randomizer'>\r\n          <div className='randomizer-top'>\r\n            <h3 className='randomizer-top__title random-title'>\r\n              Random character for today!\r\n            </h3>\r\n            <h3 className='randomizer-top__title  random-title'>\r\n              Do you want to get to know him better?\r\n            </h3>\r\n          </div>\r\n          <div className='randomizer-bottom'>\r\n            <h3 className='randomizer-bottom__title  random-title'>\r\n              Or choose another one\r\n            </h3>\r\n            <button\r\n              onClick={updateChar}\r\n              className='randomizer-bottom__button button'\r\n              type='button'\r\n            >\r\n              <div className='inner'>Try it</div>\r\n            </button>\r\n          </div>\r\n          <img\r\n            className='randomizer-img'\r\n            src={randomizerDecorate}\r\n            alt='mjolnir'\r\n          />\r\n        </div>\r\n      </section>\r\n    </CSSTransition>\r\n  );\r\n};\r\n\r\nconst View = ({ char }) => {\r\n  const { name, description, thumbnail, homepage, wiki } = char;\r\n\r\n  const filteredDesc =\r\n    description.length > 100 ? `${description.slice(0, 100)}...` : description;\r\n\r\n  const notAvailableImg = 'image_not_available.jpg';\r\n  const image =\r\n    thumbnail.slice(-23) === notAvailableImg ? marvelIcon : thumbnail;\r\n  return (\r\n    <>\r\n      <img className='character-img' src={image} alt={name} />\r\n      <div className='character-info'>\r\n        <h3 className='character-info__title'>{name}</h3>\r\n        <p className='character-info__desc'>{filteredDesc}</p>\r\n        <div className='character-links'>\r\n          <a\r\n            className='character-links__link first-link button'\r\n            href={homepage}\r\n            target='_blank'\r\n            rel='noreferrer'\r\n          >\r\n            <div className='inner'>Homepage</div>\r\n          </a>\r\n          <a\r\n            className='character-links__link second-link button button__secondary'\r\n            href={wiki}\r\n            target='_blank'\r\n            rel='noreferrer'\r\n          >\r\n            <div className='inner'>Wiki</div>\r\n          </a>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nRandomChar.propTypes = {\r\n  onCharLoaded: PropTypes.func,\r\n  onCharLoading: PropTypes.func,\r\n  onError: PropTypes.func,\r\n  updateChar: PropTypes.func,\r\n};\r\n\r\nexport default RandomChar;\r\n","import PropTypes from 'prop-types';\r\n\r\nimport marvelIcon from '../../assets/icons/marvelIcon.jpg';\r\n\r\nimport './CharListItem.scss';\r\n\r\nconst CharListItem = (props) => {\r\n  const { data, id, onCharSelected } = props;\r\n  const { name, thumbnail } = data;\r\n\r\n  const notAvailableImg = 'image_not_available.jpg';\r\n  const image =\r\n    thumbnail.slice(-23) === notAvailableImg ? marvelIcon : thumbnail;\r\n\r\n  return (\r\n    <li\r\n      onClick={() => onCharSelected(id)}\r\n      className='CharList-cards-item'\r\n      tabIndex={0}\r\n      onKeyDown={(e) => {\r\n        if (e.key === 'Enter') {\r\n          onCharSelected(id);\r\n        }\r\n      }}\r\n    >\r\n      <img\r\n        className='CharList-cards-item__img'\r\n        src={image}\r\n        alt={`character: ${name}`}\r\n      />\r\n      <h3 className='CharList-cards-item__title'>{name}</h3>\r\n    </li>\r\n  );\r\n};\r\n\r\nCharListItem.propTypes = {\r\n  data: PropTypes.object,\r\n  id: PropTypes.number,\r\n  onCharSelected: PropTypes.func,\r\n};\r\n\r\nexport default CharListItem;\r\n","import { useEffect, useState, useCallback } from 'react';\r\nimport useMarvelService from '../../hooks/useMarvelService';\r\nimport CharListItem from '../CharListItem/CharListItem';\r\n\r\nimport './CharList.scss';\r\n\r\nimport charItemLoadingGif from '../../assets/gifs/CharListItemLoading.gif';\r\nimport ironMan404 from '../../assets/gifs/ironMan404.gif';\r\n\r\nconst CharList = (props) => {\r\n  const { getAllCharacters, loading, error, clearError } = useMarvelService();\r\n\r\n  const { onCharSelected } = props;\r\n\r\n  const [chars, setChars] = useState([]);\r\n  const [newCharsLoading, setNewCharsLoading] = useState(false);\r\n  const [offset, setOffset] = useState(0);\r\n  const [charEnded, setCharEnded] = useState(false);\r\n  const [windowHeight, setWindowHeight] = useState(0);\r\n\r\n  useEffect(() => {\r\n    onRequestChars();\r\n\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  const onRequestChars = (offset) => {\r\n    clearError();\r\n    setNewCharsLoading(true);\r\n    getAllCharacters(offset).then(onCharsLoaded);\r\n    setWindowHeight(document.body.scrollHeight);\r\n  };\r\n\r\n  const onCharsLoaded = (newChars) => {\r\n    let ended = false;\r\n    if (newChars.length < 9) {\r\n      ended = true;\r\n    }\r\n\r\n    setChars((chars) => [...chars, ...newChars]);\r\n    setNewCharsLoading(() => false);\r\n    setOffset((offset) => offset + 9);\r\n    setCharEnded(() => ended);\r\n  };\r\n\r\n  const onScrollToTop = () => {\r\n    window.scrollTo({ top: 0 });\r\n  };\r\n\r\n  const onScrollToBottom = useCallback(() => {\r\n    window.scrollTo(0, windowHeight);\r\n  }, [windowHeight]);\r\n\r\n  useEffect(() => {\r\n    if (chars.length !== 0 && chars.length !== 9)\r\n      setTimeout(onScrollToBottom, 1500);\r\n  }, [chars.length, onScrollToBottom]);\r\n\r\n  const heroes = chars.map(({ id, ...data }) => (\r\n    <CharListItem\r\n      onCharSelected={onCharSelected}\r\n      key={id}\r\n      data={data}\r\n      id={id}\r\n    />\r\n  ));\r\n\r\n  const statusArray = [...Array(chars.length === 0 ? 9 : chars.length)].map(\r\n    (x, i) => <CharItemStatus loading={loading} error={error} key={i} />\r\n  );\r\n\r\n  const status = error || loading ? statusArray : null;\r\n  const content = !(error || loading) ? heroes : null;\r\n\r\n  return (\r\n    <section className='CharList'>\r\n      <ul className='CharList-cards'>\r\n        {status}\r\n        {content}\r\n      </ul>\r\n\r\n      <div className='CharList-assets'>\r\n        <button\r\n          disabled={newCharsLoading}\r\n          onClick={() => onRequestChars(offset)}\r\n          className='CharList-cards-more button button__long'\r\n          style={{ visibility: charEnded ? 'hidden' : '' }}\r\n        >\r\n          <div className='inner'>Load More</div>\r\n        </button>\r\n\r\n        <button\r\n          tabIndex={0}\r\n          onKeyDown={(e) => {\r\n            if (e.key === 'Enter') {\r\n              onScrollToTop();\r\n            }\r\n          }}\r\n          onClick={onScrollToTop}\r\n          className='CharList-scroll'\r\n        >\r\n          <span className='CharList-scroll__up'>\r\n            <span className='mouse-wheel'></span>\r\n          </span>\r\n        </button>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nconst CharItemStatus = (props) => {\r\n  const { loading } = props;\r\n  const loadData = {\r\n    src: charItemLoadingGif,\r\n    alt: 'loading gif',\r\n    title: 'Loading...',\r\n  };\r\n\r\n  const errorData = {\r\n    src: ironMan404,\r\n    alt: 'error gif',\r\n    title: 'Load Error!',\r\n  };\r\n\r\n  return (\r\n    <div className='CharList-cards-item '>\r\n      <img\r\n        className='CharList-cards-item__img'\r\n        src={loading ? loadData.src : errorData.src}\r\n        alt={loading ? loadData.alt : errorData.alt}\r\n      />\r\n      <h3 className='CharList-cards-item__title'>\r\n        {loading ? loadData.title : errorData.title}\r\n      </h3>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CharList;\r\n","import './Skeleton.scss';\r\n\r\nconst Skeleton = () => {\r\n  return (\r\n    <section className='Skeleton'>\r\n      <p className='skeleton-select'>\r\n        Please select a character to see information\r\n      </p>\r\n      <div className='skeleton'>\r\n        <div className='pulse skeleton__header'>\r\n          <div className='pulse skeleton__circle'></div>\r\n          <div className='pulse skeleton__mini'></div>\r\n        </div>\r\n        <div className='pulse skeleton__block'></div>\r\n        <div className='pulse skeleton__block'></div>\r\n        <div className='pulse skeleton__block'></div>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Skeleton;\r\n","import { useState } from 'react';\r\nimport { useFormik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport useMarvelService from '../../hooks/useMarvelService';\r\nimport ErrorMessageComponent from '../ErrorMessage/ErrorMessage';\r\n\r\nimport './CharForm.scss';\r\n\r\nconst validate = (values) => {\r\n  const errors = {};\r\n\r\n  if (!values.charName) {\r\n    errors.charName = 'This field is required';\r\n  }\r\n  return errors;\r\n};\r\n\r\n//  else if (!character) {\r\n//     errors.charName =\r\n//       'The character was not found. Check the name and try again';\r\n//   }\r\n\r\nconst CharForm = () => {\r\n  const [character, setCharacter] = useState(null);\r\n\r\n  const { getCharacterByName, loading, error, clearError } = useMarvelService();\r\n\r\n  const onCharLoaded = (char) => {\r\n    setCharacter(char);\r\n  };\r\n\r\n  const updateChar = (charName) => {\r\n    clearError();\r\n\r\n    getCharacterByName(charName).then(onCharLoaded);\r\n  };\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      charName: '',\r\n    },\r\n    validate,\r\n    onSubmit: ({ charName }) => updateChar(charName),\r\n  });\r\n\r\n  const result = !character ? null : character.length > 0 ? (\r\n    <div className='found-char'>\r\n      <div>\r\n        <p className='CharForm-desk found-char__desk'>There is!</p>\r\n        <p className='CharForm-desk found-char__desk'>\r\n          Visit{' '}\r\n          <span className='found-char__desk--charName'>\r\n            {character[0].name}\r\n          </span>{' '}\r\n          page?\r\n        </p>\r\n      </div>\r\n      <Link\r\n        to={`/characters/${character[0].id}`}\r\n        className='button button__secondary found-char__button'\r\n        type='button'\r\n      >\r\n        <div className='inner'>TO PAGE</div>\r\n      </Link>\r\n    </div>\r\n  ) : (\r\n    <div className='found-char'>\r\n      <p className='CharForm-desk CharForm-desk--error'>\r\n        The character was not found. Check the name and try again\r\n      </p>\r\n    </div>\r\n  );\r\n\r\n  const formikRequired =\r\n    formik.touched.charName && formik.errors.charName ? (\r\n      <div className='found-char'>\r\n        <div className='char-form__error CharForm-desk--error'>\r\n          {formik.errors.charName}\r\n        </div>\r\n      </div>\r\n    ) : null;\r\n\r\n  return (\r\n    <div className='CharForm'>\r\n      <h3 className='pulse CharForm__title'>Or find a character by name:</h3>\r\n\r\n      <form className='char-form' onSubmit={formik.handleSubmit}>\r\n        <input\r\n          id='charName'\r\n          name='charName'\r\n          type='text'\r\n          className='char-form__input'\r\n          placeholder='Enter name'\r\n          value={formik.values.charName}\r\n          onChange={formik.handleChange}\r\n          onBlur={formik.handleBlur}\r\n        />\r\n        <button className='button' type='submit'>\r\n          <div className='inner'>FIND</div>\r\n        </button>\r\n        {formikRequired}\r\n      </form>\r\n      {result}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CharForm;\r\n","import { useState, useEffect } from 'react';\r\n\r\nimport useMarvelService from '../../hooks/useMarvelService';\r\nimport ErrorMessageComponent from '../ErrorMessage/ErrorMessage';\r\nimport LoadingMarvel from '../LoadingMarvel/LoadingMarvel';\r\nimport Skeleton from '../Skeleton/Skeleton';\r\n\r\nimport './CharInfo.scss';\r\n\r\nimport marvelIcon from '../../assets/icons/marvelIcon.jpg';\r\nimport CharForm from '../CharForm/CharForm';\r\n\r\nconst CharInfo = (props) => {\r\n  const { getElementById, loading, error, clearError } = useMarvelService();\r\n\r\n  const [char, setChar] = useState(null);\r\n\r\n  useEffect(() => {\r\n    updateChar();\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [props.charID]);\r\n\r\n  const updateChar = () => {\r\n    const { charID } = props;\r\n    if (!charID) {\r\n      return;\r\n    }\r\n\r\n    clearError();\r\n    getElementById(charID, 'characters').then(onCharLoaded);\r\n  };\r\n\r\n  const onCharLoaded = (char) => {\r\n    setChar(char);\r\n  };\r\n\r\n  const skeleton = char || loading || error ? null : <Skeleton />;\r\n  const loadingContent = loading ? <LoadingMarvel /> : null;\r\n  const errorContent = error ? <ErrorMessageComponent /> : null;\r\n  const content = !(loading || error || !char) ? <View char={char} /> : null;\r\n\r\n  return (\r\n    <>\r\n      <section className='CharInfo'>\r\n        <div className='CharInfo__content'>\r\n          {skeleton}\r\n          {loadingContent}\r\n          {errorContent}\r\n          {content}\r\n        </div>\r\n        <div className='CharInfo__form'>\r\n          <CharForm />\r\n        </div>\r\n      </section>\r\n    </>\r\n  );\r\n};\r\n\r\nconst View = ({ char }) => {\r\n  const { name, description, thumbnail, homepage, wiki, comics } = char;\r\n\r\n  const onScrollToBottom = () => {\r\n    window.scrollTo(0, document.body.scrollHeight);\r\n  };\r\n\r\n  const comicsContent = comics.map(({ name }, i) => {\r\n    return <ComicsItem key={i} name={name} />;\r\n  });\r\n\r\n  const notAvailableImg = 'image_not_available.jpg';\r\n  const image =\r\n    thumbnail.slice(-23) === notAvailableImg ? marvelIcon : thumbnail;\r\n\r\n  const availableComics = comics.length === 0 ? ' hidden' : '';\r\n\r\n  return (\r\n    <>\r\n      <div className='char-info'>\r\n        <button\r\n          tabIndex={0}\r\n          onKeyDown={(e) => {\r\n            if (e.key === 'Enter') {\r\n              onScrollToBottom();\r\n            }\r\n          }}\r\n          onClick={onScrollToBottom}\r\n          className='CharInfo-scroll'\r\n        >\r\n          <span className='CharInfo-scroll__bottom'>\r\n            <span className='mouse-wheel'></span>\r\n          </span>\r\n        </button>\r\n        <img className='char-info__img' src={image} alt={name} />\r\n        <div className='char-info-inner'>\r\n          <h3 className='char-info-inner__title'>{name}</h3>\r\n          <a\r\n            className='char-info-inner__link button button__main'\r\n            href={homepage}\r\n          >\r\n            <div className='inner'>Homepage</div>\r\n          </a>\r\n          <a\r\n            className='char-info-inner__link button button__secondary'\r\n            href={wiki}\r\n          >\r\n            <div className='inner'>Wiki</div>\r\n          </a>\r\n        </div>\r\n      </div>\r\n      <div className='char-info-desc'>\r\n        <p className='char-info-desc__paragraph'>{description}</p>\r\n      </div>\r\n      <div className={`char-info-comics ${availableComics}`}>\r\n        <h4 className='char-info-comics__title'>Comics:</h4>\r\n        <ul className='comics-list'>{comicsContent}</ul>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nconst ComicsItem = ({ name }) => {\r\n  return <li className='comics-list__item'>{name}</li>;\r\n};\r\n\r\nexport default CharInfo;\r\n","import { useState } from 'react';\r\n\r\nimport RandomChar from '../../RandomChar/RandomChar';\r\nimport CharList from '../../CharList/CharList';\r\nimport CharInfo from '../../CharInfo/CharInfo';\r\nimport ErrorBoundary from '../../ErrorBoundary/ErrorBoundary';\r\n\r\nimport decorationVision from '../../../assets/images/decorations/decorationVision.png';\r\n// import decorationFalcon from '../../../assets/images/decorations/decorationFalcon.png';\r\n// import decorationIronMan from '../../../assets/images/decorations/ironMan.png';\r\n\r\nconst Characters = () => {\r\n  const [selectedChar, setSelectedChar] = useState(null);\r\n\r\n  const onScrollToTop = () => {\r\n    window.scrollTo({ top: 150 });\r\n  };\r\n\r\n  const onCharSelected = (id) => {\r\n    setSelectedChar(id);\r\n    onScrollToTop();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <ErrorBoundary>\r\n        <RandomChar />\r\n      </ErrorBoundary>\r\n      <div className='container wrapper'>\r\n        <div className='main__content'>\r\n          <ErrorBoundary>\r\n            <CharList onCharSelected={onCharSelected} />\r\n          </ErrorBoundary>\r\n          <ErrorBoundary>\r\n            <CharInfo charID={selectedChar} />\r\n          </ErrorBoundary>\r\n          <img\r\n            className='decoration-vision'\r\n            src={decorationVision}\r\n            alt='decoration-vision'\r\n          />\r\n          {/* <img\r\n            className='decoration-falcon'\r\n            src={decorationFalcon}\r\n            alt='decorationFalcon'\r\n          />\r\n          <img\r\n            className='decoration-iron-Man'\r\n            src={decorationIronMan}\r\n            alt='decorationIronMan'\r\n          /> */}\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Characters;\r\n","import { useHttp } from './http.hook';\r\n\r\n// TODO: refactor this methods, because it's have a copypaste\r\nconst useMarvelService = () => {\r\n  const { request, loading, error, clearError } = useHttp();\r\n\r\n  const _server = {\r\n    url: 'https://gateway.marvel.com:443/v1/public/',\r\n    characters: 'characters',\r\n    baseLimit: 9,\r\n    comicsLimit: 8,\r\n    baseOffset: 0,\r\n    comics: 'comics',\r\n    apiKeyIvan: 'c5d6fc8b83116d92ed468ce36bac6c62',\r\n    apiKeyMail: 'b3252ae24667fd89a578925f8337c8d2',\r\n    apiKeyGmail: 'af8551b0745198c417f5907893a2a765',\r\n  };\r\n\r\n  const getAllCharacters = async (offset = _server.baseOffset) => {\r\n    const { url, characters, baseLimit, apiKeyGmail } = _server;\r\n\r\n    const res = await request(\r\n      `${url}${characters}?limit=${baseLimit}&offset=${offset}&apikey=${apiKeyGmail}`\r\n    );\r\n\r\n    return res.data.results.map(_transformCharacter);\r\n  };\r\n\r\n  const getAllComics = async (offset = _server.baseOffset) => {\r\n    const { url, comics, comicsLimit, apiKeyGmail } = _server;\r\n\r\n    const res = await request(\r\n      `${url}${comics}?limit=${comicsLimit}&offset=${offset}&apikey=${apiKeyGmail}`\r\n    );\r\n    return res.data.results.map(_transformComics);\r\n  };\r\n\r\n  const getElementById = async (id, selector) => {\r\n    const { url, apiKeyGmail } = _server;\r\n\r\n    const res = await request(`${url}${selector}/${id}?apikey=${apiKeyGmail}`);\r\n\r\n    if (selector === 'characters') {\r\n      return _transformCharacter(res.data.results[0]);\r\n    } else if (selector === 'comics') {\r\n      return _transformComics(res.data.results[0]);\r\n    }\r\n  };\r\n\r\n  const getCharacterByName = async (name) => {\r\n    const { url, apiKeyGmail } = _server;\r\n\r\n    const res = await request(\r\n      `${url}characters?name=${name}&apikey=${apiKeyGmail}`\r\n    );\r\n\r\n    return res.data.results.map(_transformCharacter);\r\n  };\r\n\r\n  const _transformComics = (comics) => {\r\n    const {\r\n      id,\r\n      title,\r\n      thumbnail,\r\n      urls,\r\n      prices,\r\n      description,\r\n      pageCount,\r\n      language = 'EN-RU',\r\n    } = comics;\r\n\r\n    const filteredDesc =\r\n      description === '' || description === null\r\n        ? `This Marvel comic doesn't have description.`\r\n        : `${description.slice(0, 250)}...`;\r\n\r\n    return {\r\n      id,\r\n      title,\r\n      language,\r\n      pages: pageCount,\r\n      description: filteredDesc,\r\n      thumbnail: `${thumbnail.path}.${thumbnail.extension}`,\r\n      homepage: urls[0].url,\r\n      comics: comics.items,\r\n      price: prices[0].price,\r\n    };\r\n  };\r\n\r\n  const _transformCharacter = (char) => {\r\n    const { id, name, description, thumbnail, urls, comics } = char;\r\n\r\n    const filteredDesc =\r\n      description === ''\r\n        ? `This Marvel character doesn't have description.\\n Please, click the links`\r\n        : description;\r\n\r\n    return {\r\n      id,\r\n      name,\r\n      description: filteredDesc,\r\n      thumbnail: `${thumbnail.path}.${thumbnail.extension}`,\r\n      homepage: urls[0].url,\r\n      wiki: urls[1].url,\r\n      comics: comics.items,\r\n    };\r\n  };\r\n\r\n  return {\r\n    getAllComics,\r\n    getAllCharacters,\r\n    getElementById,\r\n    getCharacterByName,\r\n    loading,\r\n    error,\r\n    clearError,\r\n  };\r\n};\r\n\r\nexport default useMarvelService;\r\n","import { useCallback, useState } from 'react';\r\n\r\nexport const useHttp = () => {\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n\r\n  const request = useCallback(\r\n    async (\r\n      url,\r\n      method = 'GET',\r\n      body = null,\r\n      headers = { 'Content-Type': 'application/json' }\r\n    ) => {\r\n      setLoading(true);\r\n\r\n      try {\r\n        const response = await fetch(url, { method, body, headers });\r\n\r\n        if (!response.ok)\r\n          throw new Error(`Could not fetch ${url}, status: ${response.status}`);\r\n\r\n        const data = await response.json();\r\n\r\n        setLoading(false);\r\n\r\n        return data;\r\n      } catch (error) {\r\n        setLoading(false);\r\n        setError(error.message);\r\n        throw error;\r\n      }\r\n    },\r\n    []\r\n  );\r\n\r\n  const clearError = useCallback(() => setError(null), []);\r\n\r\n  return { request, clearError, loading, error };\r\n};\r\n"],"names":["errorBoundaryClasses","margin","width","height","padding","border","borderRadius","boxShadow","background","zIndex","position","ErrorBoundary","state","error","errorInfo","console","log","this","setState","style","props","children","Component","left","bottom","transform","textAlign","color","fontWeight","textTransform","display","objectFit","src","alt","className","marvel","View","char","name","description","thumbnail","homepage","wiki","filteredDesc","length","slice","image","marvelIcon","href","target","rel","useState","setChar","loadChar","setLoadChar","useMarvelService","getElementById","loading","clearError","useEffect","updateChar","timerId","setInterval","clearInterval","onCharLoaded","id","Math","floor","random","then","errorMessage","ErrorMessage","spinner","content","CSSTransition","in","timeout","classNames","onClick","type","randomizerDecorate","data","onCharSelected","tabIndex","onKeyDown","e","key","CharItemStatus","loadData","charItemLoadingGif","title","errorData","ironMan404","getAllCharacters","chars","setChars","newCharsLoading","setNewCharsLoading","offset","setOffset","charEnded","setCharEnded","windowHeight","setWindowHeight","onRequestChars","onCharsLoaded","document","body","scrollHeight","newChars","ended","onScrollToTop","window","scrollTo","top","onScrollToBottom","useCallback","setTimeout","heroes","map","statusArray","Array","x","i","status","disabled","visibility","validate","values","errors","charName","character","setCharacter","getCharacterByName","formik","useFormik","initialValues","onSubmit","result","to","formikRequired","touched","handleSubmit","placeholder","value","onChange","handleChange","onBlur","handleBlur","comics","comicsContent","ComicsItem","availableComics","charID","skeleton","loadingContent","errorContent","selectedChar","setSelectedChar","decorationVision","setLoading","setError","request","url","method","headers","fetch","response","ok","Error","json","message","useHttp","_server","characters","baseLimit","apiKeyGmail","res","results","_transformCharacter","getAllComics","comicsLimit","_transformComics","selector","urls","prices","pageCount","language","pages","path","extension","items","price"],"sourceRoot":""}